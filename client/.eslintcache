[{"/Users/ian/Desktop/study_buddy/client/src/reportWebVitals.js":"1","/Users/ian/Desktop/study_buddy/client/src/App.js":"2","/Users/ian/Desktop/study_buddy/client/src/components/Login.js":"3","/Users/ian/Desktop/study_buddy/client/src/providers/AuthProvider.js":"4","/Users/ian/Desktop/study_buddy/client/src/index.js":"5","/Users/ian/Desktop/study_buddy/client/src/components/Register.js":"6","/Users/ian/Desktop/study_buddy/client/src/components/useFormInput.js":"7"},{"size":362,"mtime":1610815942997,"results":"8","hashOfConfig":"9"},{"size":545,"mtime":1610820123353,"results":"10","hashOfConfig":"9"},{"size":1775,"mtime":1610820118233,"results":"11","hashOfConfig":"9"},{"size":2421,"mtime":1610823155635,"results":"12","hashOfConfig":"9"},{"size":682,"mtime":1610820296942,"results":"13","hashOfConfig":"9"},{"size":2119,"mtime":1610824360303,"results":"14","hashOfConfig":"9"},{"size":353,"mtime":1610822987128,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ikjqch",{"filePath":"18","messages":"19","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ian/Desktop/study_buddy/client/src/reportWebVitals.js",[],"/Users/ian/Desktop/study_buddy/client/src/App.js",["31"],"/Users/ian/Desktop/study_buddy/client/src/components/Login.js",["32"],"/Users/ian/Desktop/study_buddy/client/src/providers/AuthProvider.js",["33","34"],"/Users/ian/Desktop/study_buddy/client/src/index.js",[],"/Users/ian/Desktop/study_buddy/client/src/components/Register.js",["35","36"],"import React, { useState, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../providers/AuthProvider\";\nimport { Button, Form, Segment, Header } from \"semantic-ui-react\";\nimport { useFormInput } from \"./useFormInput\";\n\nconst Register = ({ history }) => {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const { handleRegister, authLoading, authErrors, setAuthErrors } = useContext(\n    AuthContext\n  );\n  const email = useFormInput(\"\", \"Email\");\n  const password = useFormInput(\"\", \"Password\");\n  const passwordConfirmation = useFormInput(\"\", \"Password Confirmation\");\n\n  useEffect(() => {\n    setAuthErrors([]);\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // With our custom hook we need to grab to value from the form of hooks with .value\n    if (password.value === passwordConfirmation.value)\n      handleRegister(\n        {\n          email: email.value,\n          password: password.value,\n          passwordConfirmation: passwordConfirmation.value,\n        },\n        history\n      );\n    else alert(\"Passwords Do Not Match!\");\n  };\n\n  // Useing custom useFormInput hook to reuse some common logic\n  // in our Form inputs\n  return (\n    <Segment basic>\n      <Header as=\"h1\" textAlign=\"center\">\n        Register\n      </Header>\n      {/* simple way of showing errors, not great but better than nothing */}\n      {authErrors && authErrors.map((err) => <p>{err}</p>)}\n      <Form onSubmit={handleSubmit}>\n        <Form.Input autoFocus {...email} />\n        <Form.Input type=\"password\" {...password} />\n        <Form.Input type=\"password\" {...passwordConfirmation} />\n        <Segment textAlign=\"center\" basic>\n          <Button\n            //ui ux enhancments to show loading and to prevent resubmit\n            loading={authLoading}\n            disabled={authLoading}\n            primary\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        </Segment>\n      </Form>\n    </Segment>\n  );\n};\n\nexport default Register;","/Users/ian/Desktop/study_buddy/client/src/components/useFormInput.js",[],{"ruleId":"37","severity":2,"message":"38","line":12,"column":47,"nodeType":"39","messageId":"40","endLine":12,"endColumn":52},{"ruleId":"41","severity":1,"message":"42","line":15,"column":6,"nodeType":"43","endLine":15,"endColumn":8,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":13,"column":12,"nodeType":"39","messageId":"47","endLine":13,"endColumn":26},{"ruleId":"45","severity":1,"message":"48","line":63,"column":11,"nodeType":"39","messageId":"47","endLine":63,"endColumn":14},{"ruleId":"45","severity":1,"message":"49","line":1,"column":17,"nodeType":"39","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"42","line":19,"column":6,"nodeType":"43","endLine":19,"endColumn":8,"suggestions":"50"},"no-undef","'Login' is not defined.","Identifier","undef","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuthErrors'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-unused-vars","'timeoutPromise' is defined but never used.","unusedVar","'res' is assigned a value but never used.","'useState' is defined but never used.",["52"],{"desc":"53","fix":"54"},{"desc":"53","fix":"55"},"Update the dependencies array to be: [setAuthErrors]",{"range":"56","text":"57"},{"range":"58","text":"57"},[600,602],"[setAuthErrors]",[760,762]]