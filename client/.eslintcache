[{"/Users/ian/Desktop/study-buddy/client/src/index.js":"1","/Users/ian/Desktop/study-buddy/client/src/App.js":"2","/Users/ian/Desktop/study-buddy/client/src/components/Landing.js":"3","/Users/ian/Desktop/study-buddy/client/src/components/GroupShow.js":"4","/Users/ian/Desktop/study-buddy/client/src/components/Channel.js":"5"},{"size":836,"mtime":1610837824690,"results":"6","hashOfConfig":"7"},{"size":1099,"mtime":1610839398318,"results":"8","hashOfConfig":"7"},{"size":4531,"mtime":1610838750025,"results":"9","hashOfConfig":"7"},{"size":2779,"mtime":1610840348807,"results":"10","hashOfConfig":"7"},{"size":1759,"mtime":1610840490641,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1coqvz5",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ian/Desktop/study-buddy/client/src/index.js",["23"],"/Users/ian/Desktop/study-buddy/client/src/App.js",[],"/Users/ian/Desktop/study-buddy/client/src/components/Landing.js",["24","25","26","27","28","29","30"],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Form, Header, } from 'semantic-ui-react';\nimport GroupShow from './GroupShow';\n\n\nexport default (props) => {\n  const [value, setValue] = useState(\"\")\n  const [groups, setGroups] = useState([])\n  const [group, setGroup] = useState({})\n  const [searchTerm, setSearchTerm] = useState('')\n  const [editTerm, setEditTerm] = useState('')\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n\n  useEffect(()=> {\n    getGroups();\n  }, []);\n\n  const getGroups = async () => {\n    try {\n      let res = await axios.get(`/api/groups`);\n      setGroups(res.data);\n      console.log(res.data)\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n    console.log(id)\n    let res = await axios.delete(`/api/groups/${id}`)\n    let newGroups = groups.filter((g) => g.id !== res.data.id);\n    setGroups(newGroups);\n    } catch (err) {\n      console.log(err)\n    }\n}\n\nconst handleEdit = async (id, term) => {\n  try {\n    console.log(id)\n    setGroup({title: term, description: description})\n    let res = await axios.put(`/api/groups/${id}`, group)\n    let newGroups = groups.map((d) => (d.id !== id ? d : res.data));\n    setGroups(newGroups);\n    } catch (err) {\n      console.log(err)\n    }\n}\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n    console.log(group);\n    setGroup({title: title, description:description })\n    axios.post(`/api/groups`, group)\n    .then((res) => {\n      console.log(res);\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\n  return (\n    <>\n      <div className=\"Searchbar\">\n        <input type=\"text\" placeholder=\"Search groups\"\n                onChange={e => {setSearchTerm(e.target.value)}}/>\n      </div>\n      <Form onSubmit={handleSubmit}>\n      <Form.Input\n        label={\"Title\"}\n        value={title}\n        onChange={(e) => {\n          setTitle(e.target.value);\n        }}\n      />\n      <Form.Input\n        label={\"Desc\"}\n        value={description}\n        onChange={(e) => {\n          setDescription(e.target.value);\n        }}\n      />\n      <Form.Button type=\"submit\">Add Department</Form.Button>\n    </Form>\n      <div className=\"groups\">\n        {groups.filter((val) => {\n          if (searchTerm == \"\") {\n            return val\n          }\n          else if (val.title.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return val\n          }\n        }).map(g => {\n            return(\n                <Card>\n                  <Card.Content>\n                    <Card.Header as={Link} to={`/${g.id}`}>{g.title}</Card.Header>\n                    <Card.Description>{g.description}</Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                  <Form onSubmit={() => handleEdit(g.id, editTerm)}>\n                    <Form.Input\n                      label={\"Title\"}\n                      value={editTerm}\n                      onChange={(e) => {\n                        setEditTerm(e.target.value);\n        }}\n      />\n      <Form.Button type=\"submit\">Submit</Form.Button>\n    </Form>\n        <div className='ui two buttons'>\n          <Button basic color='yellow'>\n            Edit Group\n          </Button>\n          <Button onClick={() => handleDelete(g.id)} basic color='red'>\n            Delete Group\n          </Button>\n        </div>\n      </Card.Content>\n                </Card>\n            ) })}\n      </div>\n    </>\n  )\n \n}\n\n\n// import Axios from 'axios'\n// import { useEffect, useState } from 'react'\n// import { Card, Image, Button, Segment, Header } from 'semantic-ui-react'\n\n// export default (props) => {\n//   const [channel, setChannel] = useState([])\n//   useEffect(()=> {\n//     getChannels()\n//   },[])\n//   const getChannels = async () => {\n//     try {\n//       let res = await Axios.get('/api/groups/1/channels')\n//       console.log(res.data)\n//       setChannel(res.data)\n//     }\n//     catch (err) {\n//       console.log(err)\n//     }\n//   }\n//   const renderChannels = () => {\n//     return channel.map((channel) => (\n//       <Card key={`channel-${channel.id}`}>\n//         <Card.Content>\n//           <Card.Header>{channel.subject}</Card.Header>\n//           <Card.Description>{channel.description}</Card.Description>\n//         </Card.Content>\n//       </Card>\n//     ));\n//   };\n//   return (\n//     <>\n//       <div>channels</div>\n//       </>\n//   );\n// };\n\n","/Users/ian/Desktop/study-buddy/client/src/components/GroupShow.js",["31","32","33","34","35","36","37","38","39","40"],"/Users/ian/Desktop/study-buddy/client/src/components/Channel.js",["41","42","43","44","45"],{"ruleId":null,"fatal":true,"severity":2,"message":"46","line":10,"column":2},{"ruleId":"47","severity":1,"message":"48","line":4,"column":30,"nodeType":"49","messageId":"50","endLine":4,"endColumn":36},{"ruleId":"47","severity":1,"message":"51","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":17},{"ruleId":"52","severity":1,"message":"53","line":8,"column":1,"nodeType":"54","endLine":131,"endColumn":2},{"ruleId":"47","severity":1,"message":"55","line":9,"column":10,"nodeType":"49","messageId":"50","endLine":9,"endColumn":15},{"ruleId":"47","severity":1,"message":"56","line":9,"column":17,"nodeType":"49","messageId":"50","endLine":9,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":91,"column":30,"nodeType":"59","messageId":"60","endLine":91,"endColumn":32},{"ruleId":"61","severity":1,"message":"62","line":92,"column":26,"nodeType":"63","messageId":"64","endLine":92,"endColumn":28},{"ruleId":"47","severity":1,"message":"65","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":14},{"ruleId":"47","severity":1,"message":"66","line":3,"column":16,"nodeType":"49","messageId":"50","endLine":3,"endColumn":21},{"ruleId":"47","severity":1,"message":"48","line":3,"column":40,"nodeType":"49","messageId":"50","endLine":3,"endColumn":46},{"ruleId":"47","severity":1,"message":"67","line":3,"column":59,"nodeType":"49","messageId":"50","endLine":3,"endColumn":63},{"ruleId":"52","severity":1,"message":"53","line":7,"column":1,"nodeType":"54","endLine":106,"endColumn":2},{"ruleId":"47","severity":1,"message":"55","line":8,"column":10,"nodeType":"49","messageId":"50","endLine":8,"endColumn":15},{"ruleId":"47","severity":1,"message":"56","line":8,"column":17,"nodeType":"49","messageId":"50","endLine":8,"endColumn":25},{"ruleId":"47","severity":1,"message":"68","line":9,"column":10,"nodeType":"49","messageId":"50","endLine":9,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":19,"column":6,"nodeType":"71","endLine":19,"endColumn":8,"suggestions":"72"},{"ruleId":"47","severity":1,"message":"73","line":51,"column":11,"nodeType":"49","messageId":"50","endLine":51,"endColumn":14},{"ruleId":"47","severity":1,"message":"74","line":10,"column":10,"nodeType":"49","messageId":"50","endLine":10,"endColumn":14},{"ruleId":"47","severity":1,"message":"75","line":10,"column":16,"nodeType":"49","messageId":"50","endLine":10,"endColumn":23},{"ruleId":"47","severity":1,"message":"76","line":11,"column":10,"nodeType":"49","messageId":"50","endLine":11,"endColumn":15},{"ruleId":"47","severity":1,"message":"77","line":11,"column":17,"nodeType":"49","messageId":"50","endLine":11,"endColumn":25},{"ruleId":"69","severity":1,"message":"78","line":24,"column":5,"nodeType":"71","endLine":24,"endColumn":7,"suggestions":"79"},"Parsing error: Unexpected token\n\n   8 | import AuthProvider from './providers/AuthProvider';\n   9 | import { initMiddleware, } from 'devise-axios';\n> 10 | <<<<<<< HEAD\n     |  ^\n  11 | initMiddleware();\n  12 | =======\n  13 | >>>>>>> ced7ab1a4fc9c1bea2f29bdf625372a54c6a17af","no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'GroupShow' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'Image' is defined but never used.","'Icon' is defined but never used.","'groups' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getChannels' and 'getGroup'. Either include them or remove the dependency array.","ArrayExpression",["80"],"'res' is assigned a value but never used.","'body' is assigned a value but never used.","'setBody' is assigned a value but never used.","'photo' is assigned a value but never used.","'setPhoto' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getComments'. Either include it or remove the dependency array.",["81"],{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [getChannels, getGroup]",{"range":"86","text":"87"},"Update the dependencies array to be: [getComments]",{"range":"88","text":"89"},[517,519],"[getChannels, getGroup]",[644,646],"[getComments]"]